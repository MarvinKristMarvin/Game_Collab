version: "3.8"
services:
  db:
    image: postgres:14
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/db/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./backend/db/populate_tables.sql:/docker-entrypoint-initdb.d/populate_tables.sql

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      PORT: ${PORT}
      DOMAIN: ${DOMAIN}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      RATE_LIMIT_WINDOWMS_MINUTES: ${RATE_LIMIT_WINDOWMS_MINUTES}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX}
      NODE_ENV: ${NODE_ENV}
    ports:
      - "5000:5000"
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "3000:80"

volumes:
  db_data:
